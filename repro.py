import torch
from nvfuser import FusionDefinition, DataType

def nvfuser_fusion_id14(fd : FusionDefinition) -> None :
    S0 = fd.define_scalar(None, dtype=DataType.Int)
    S1 = fd.define_scalar(None, dtype=DataType.Int)
    T2 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T3 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T4 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T5 = fd.define_tensor(shape=[1, -1], contiguity=[None, True], dtype=DataType.Float, is_cpu=False, stride_order=[1, 0])
    T6 = fd.define_tensor(shape=[1, -1, 1], contiguity=[None, None, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 0, 1])
    T7 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T8 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, None], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T9 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T10 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, None, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T11 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T12 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T13 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T14 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T15 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T16 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T17 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T18 = fd.define_tensor(shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0])
    T19 = fd.ops.cast(T2, dtype=DataType.Float)
    T20 = fd.ops.cast(T4, dtype=DataType.Float)
    T21 = fd.ops.cast(T3, dtype=DataType.Float)
    T22 = fd.ops.add(T20, T21)
    T23 = fd.ops.add(T22, T19)
    T24 = fd.ops.cast(T10, dtype=DataType.Float)
    T25 = fd.ops.cast(T11, dtype=DataType.Float)
    S26 = fd.define_scalar(1, dtype=DataType.Int)
    S27 = fd.define_scalar(2048, dtype=DataType.Int)
    S28 = fd.define_scalar(1, dtype=DataType.Int)
    V29 = fd.define_vector([S26, S27, S28], dtype=DataType.Int)
    T30 = fd.ops.broadcast_in_dim(T5, shape=V29, broadcast_dims=[0, 1])
    S31 = fd.define_scalar(1, dtype=DataType.Int)
    S32 = fd.define_scalar(2048, dtype=DataType.Int)
    S33 = fd.define_scalar(8192, dtype=DataType.Int)
    V34 = fd.define_vector([S31, S32, S33], dtype=DataType.Int)
    T35 = fd.ops.broadcast_in_dim(T30, shape=V34, broadcast_dims=[0, 1, 2])
    S36 = fd.define_scalar(3.00000, dtype=DataType.Double)
    T37 = fd.ops.pow(T6, S36)
    T38 = fd.ops.sub(T23, T35)
    T39 = fd.ops.cast(T12, dtype=DataType.Float)
    T40 = fd.ops.sum(T39, dims=[0, 1], keepdim=False, dtype=DataType.Null)
    T41 = fd.ops.cast(T13, dtype=DataType.Float)
    T42 = fd.ops.sum(T41, dims=[0, 1], keepdim=False, dtype=DataType.Null)
    T43 = fd.ops.sum(T15, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T44 = fd.ops.sum(T16, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    S45 = fd.define_scalar(16.0000, dtype=DataType.Double)
    S46 = fd.ops.reciprocal(S45)
    T47 = fd.ops.mul(T40, S46)
    T48 = fd.ops.cast(T47, dtype=DataType.BFloat16)
    S49 = fd.define_scalar(16.0000, dtype=DataType.Double)
    S50 = fd.ops.reciprocal(S49)
    T51 = fd.ops.mul(T42, S50)
    T52 = fd.ops.cast(T51, dtype=DataType.BFloat16)
    S53 = fd.define_scalar(1, dtype=DataType.Int)
    S54 = fd.define_scalar(2048, dtype=DataType.Int)
    S55 = fd.define_scalar(1, dtype=DataType.Int)
    V56 = fd.define_vector([S53, S54, S55], dtype=DataType.Int)
    T57 = fd.ops.broadcast_in_dim(T43, shape=V56, broadcast_dims=[1])
    S58 = fd.define_scalar(1, dtype=DataType.Int)
    S59 = fd.define_scalar(2048, dtype=DataType.Int)
    S60 = fd.define_scalar(1, dtype=DataType.Int)
    V61 = fd.define_vector([S58, S59, S60], dtype=DataType.Int)
    T62 = fd.ops.broadcast_in_dim(T44, shape=V61, broadcast_dims=[1])
    S63 = fd.define_scalar(-0.500000, dtype=DataType.Double)
    T64 = fd.ops.mul(S63, T57)
    T65 = fd.ops.mul(T64, T37)
    T66 = fd.ops.cast(T17, dtype=DataType.Float)
    T67 = fd.ops.mul(T24, T66)
    T68 = fd.ops.mul(T9, T66)
    T69 = fd.ops.mul(T8, T67)
    T70 = fd.ops.mul(T7, T67)
    T71 = fd.ops.neg(T69)
    T72 = fd.ops.cast(T18, dtype=DataType.Float)
    S73 = fd.define_scalar(16.0000, dtype=DataType.Double)
    S74 = fd.ops.reciprocal(S73)
    T75 = fd.ops.mul(T72, S74)
    T76 = fd.ops.cast(T75, dtype=DataType.BFloat16)
    T77 = fd.ops.sum(T65, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T78 = fd.ops.sum(T62, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T79 = fd.ops.sum(T66, dims=[0, 1], keepdim=False, dtype=DataType.Null)
    T80 = fd.ops.sum(T68, dims=[0, 1], keepdim=False, dtype=DataType.Null)
    T81 = fd.ops.sum(T70, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T82 = fd.ops.sum(T71, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    S83 = fd.define_scalar(1, dtype=DataType.Int)
    S84 = fd.define_scalar(2048, dtype=DataType.Int)
    V85 = fd.define_vector([S83, S84], dtype=DataType.Int)
    T86 = fd.ops.broadcast_in_dim(T77, shape=V85, broadcast_dims=[1])
    S87 = fd.define_scalar(1, dtype=DataType.Int)
    S88 = fd.define_scalar(2048, dtype=DataType.Int)
    S89 = fd.define_scalar(1, dtype=DataType.Int)
    V90 = fd.define_vector([S87, S88, S89], dtype=DataType.Int)
    T91 = fd.ops.broadcast_in_dim(T86, shape=V90, broadcast_dims=[0, 1])
    S92 = fd.define_scalar(1, dtype=DataType.Int)
    S93 = fd.define_scalar(2048, dtype=DataType.Int)
    S94 = fd.define_scalar(8192, dtype=DataType.Int)
    V95 = fd.define_vector([S92, S93, S94], dtype=DataType.Int)
    T96 = fd.ops.broadcast_in_dim(T91, shape=V95, broadcast_dims=[0, 1, 2])
    S97 = fd.define_scalar(2.00000, dtype=DataType.Double)
    T98 = fd.ops.mul(S97, T96)
    T99 = fd.ops.mul(T98, T38)
    S100 = fd.define_scalar(1, dtype=DataType.Int)
    S101 = fd.define_scalar(2048, dtype=DataType.Int)
    S102 = fd.define_scalar(1, dtype=DataType.Int)
    V103 = fd.define_vector([S100, S101, S102], dtype=DataType.Int)
    T104 = fd.ops.broadcast_in_dim(T81, shape=V103, broadcast_dims=[1])
    S105 = fd.define_scalar(1, dtype=DataType.Int)
    S106 = fd.define_scalar(2048, dtype=DataType.Int)
    S107 = fd.define_scalar(1, dtype=DataType.Int)
    V108 = fd.define_vector([S105, S106, S107], dtype=DataType.Int)
    T109 = fd.ops.broadcast_in_dim(T82, shape=V108, broadcast_dims=[1])
    S110 = fd.define_scalar(-0.500000, dtype=DataType.Double)
    T111 = fd.ops.mul(S110, T104)
    T112 = fd.ops.mul(T111, T37)
    S113 = fd.define_scalar(16.0000, dtype=DataType.Double)
    S114 = fd.ops.reciprocal(S113)
    T115 = fd.ops.mul(T79, S114)
    T116 = fd.ops.cast(T115, dtype=DataType.BFloat16)
    S117 = fd.define_scalar(16.0000, dtype=DataType.Double)
    S118 = fd.ops.reciprocal(S117)
    T119 = fd.ops.mul(T80, S118)
    T120 = fd.ops.cast(T119, dtype=DataType.BFloat16)
    S121 = fd.ops.cast(S0, dtype=DataType.Double)
    S122 = fd.ops.reciprocal(S121)
    T123 = fd.ops.mul(T99, S122)
    T124 = fd.ops.sum(T112, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T125 = fd.ops.sum(T109, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    S126 = fd.define_scalar(1, dtype=DataType.Int)
    S127 = fd.define_scalar(2048, dtype=DataType.Int)
    V128 = fd.define_vector([S126, S127], dtype=DataType.Int)
    T129 = fd.ops.broadcast_in_dim(T124, shape=V128, broadcast_dims=[1])
    S130 = fd.define_scalar(1, dtype=DataType.Int)
    S131 = fd.define_scalar(2048, dtype=DataType.Int)
    S132 = fd.define_scalar(1, dtype=DataType.Int)
    V133 = fd.define_vector([S130, S131, S132], dtype=DataType.Int)
    T134 = fd.ops.broadcast_in_dim(T129, shape=V133, broadcast_dims=[0, 1])
    S135 = fd.define_scalar(1, dtype=DataType.Int)
    S136 = fd.define_scalar(2048, dtype=DataType.Int)
    S137 = fd.define_scalar(8192, dtype=DataType.Int)
    V138 = fd.define_vector([S135, S136, S137], dtype=DataType.Int)
    T139 = fd.ops.broadcast_in_dim(T134, shape=V138, broadcast_dims=[0, 1, 2])
    S140 = fd.define_scalar(2.00000, dtype=DataType.Double)
    T141 = fd.ops.mul(S140, T139)
    T142 = fd.ops.mul(T141, T38)
    S143 = fd.ops.cast(S1, dtype=DataType.Double)
    S144 = fd.ops.reciprocal(S143)
    T145 = fd.ops.mul(T142, S144)
    S146 = fd.define_scalar(1, dtype=DataType.Int)
    S147 = fd.define_scalar(2048, dtype=DataType.Int)
    V148 = fd.define_vector([S146, S147], dtype=DataType.Int)
    T149 = fd.ops.broadcast_in_dim(T78, shape=V148, broadcast_dims=[1])
    S150 = fd.define_scalar(1, dtype=DataType.Int)
    S151 = fd.define_scalar(2048, dtype=DataType.Int)
    S152 = fd.define_scalar(1, dtype=DataType.Int)
    V153 = fd.define_vector([S150, S151, S152], dtype=DataType.Int)
    T154 = fd.ops.broadcast_in_dim(T149, shape=V153, broadcast_dims=[0, 1])
    S155 = fd.define_scalar(1, dtype=DataType.Int)
    S156 = fd.define_scalar(2048, dtype=DataType.Int)
    S157 = fd.define_scalar(8192, dtype=DataType.Int)
    V158 = fd.define_vector([S155, S156, S157], dtype=DataType.Int)
    T159 = fd.ops.broadcast_in_dim(T154, shape=V158, broadcast_dims=[0, 1, 2])
    S160 = fd.define_scalar(0.000122070, dtype=DataType.Double)
    T161 = fd.ops.mul(S160, T159)
    T162 = fd.ops.add(T161, T123)
    T163 = fd.ops.add(T14, T162)
    T164 = fd.ops.add(T25, T163)
    S165 = fd.define_scalar(1, dtype=DataType.Int)
    S166 = fd.define_scalar(2048, dtype=DataType.Int)
    V167 = fd.define_vector([S165, S166], dtype=DataType.Int)
    T168 = fd.ops.broadcast_in_dim(T125, shape=V167, broadcast_dims=[1])
    S169 = fd.define_scalar(1, dtype=DataType.Int)
    S170 = fd.define_scalar(2048, dtype=DataType.Int)
    S171 = fd.define_scalar(1, dtype=DataType.Int)
    V172 = fd.define_vector([S169, S170, S171], dtype=DataType.Int)
    T173 = fd.ops.broadcast_in_dim(T168, shape=V172, broadcast_dims=[0, 1])
    S174 = fd.define_scalar(1, dtype=DataType.Int)
    S175 = fd.define_scalar(2048, dtype=DataType.Int)
    S176 = fd.define_scalar(8192, dtype=DataType.Int)
    V177 = fd.define_vector([S174, S175, S176], dtype=DataType.Int)
    T178 = fd.ops.broadcast_in_dim(T173, shape=V177, broadcast_dims=[0, 1, 2])
    S179 = fd.define_scalar(0.000122070, dtype=DataType.Double)
    T180 = fd.ops.mul(S179, T178)
    T181 = fd.ops.add(T180, T145)
    T182 = fd.ops.add(T69, T181)
    T183 = fd.ops.add(T164, T182)
    T184 = fd.ops.cast(T183, dtype=DataType.BFloat16)
    fd.add_output(T184)
    fd.add_output(T52)
    fd.add_output(T48)
    fd.add_output(T120)
    fd.add_output(T116)
    fd.add_output(T76)

with FusionDefinition() as fd:
    nvfuser_fusion_id14(fd)

inputs = [
    8192,
    8192,
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((2048,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048), (2048, 1)),
    torch.randn((2048,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 1), (2048, 1, 2048)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((2048,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 8192), (2048, 1, 0)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((8192,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (8192, 0, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:4').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((75497472,), dtype=torch.bfloat16, device='cuda:4').as_strided((9216, 8192), (8192, 1)),
]
fd.execute(inputs)
