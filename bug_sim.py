import torch
from nvfuser import FusionDefinition, DataType

def nvfuser_fusion_id50(fd : FusionDefinition) -> None :
    T0 = fd.define_tensor(shape=[-1, -1, -1, -1], contiguity=[True, True, True, True], dtype=DataType.Half, is_cpu=False, stride_order=[3, 2, 1, 0])
    T1 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.Float, is_cpu=False, stride_order=[0])
    T2 = fd.define_tensor(shape=[-1], contiguity=[True], dtype=DataType.Float, is_cpu=False, stride_order=[0])
    T3 = fd.define_tensor(shape=[-1, -1, -1, -1], contiguity=[True, True, True, True], dtype=DataType.Half, is_cpu=False, stride_order=[3, 2, 1, 0])
    T4 = fd.define_tensor(shape=[-1, -1, -1, -1], contiguity=[True, True, True, True], dtype=DataType.Half, is_cpu=False, stride_order=[3, 2, 1, 0])
    T5 = fd.define_tensor(shape=[-1, -1, -1, 1], contiguity=[True, True, True, None], dtype=DataType.Half, is_cpu=False, stride_order=[2, 3, 1, 0])
    T6 = fd.define_tensor(shape=[-1, -1, -1, -1], contiguity=[None, True, None, None], dtype=DataType.Float, is_cpu=False, stride_order=[3, 2, 1, 0])
    T7 = fd.ops.cast(T0, dtype=DataType.Float)
    S8 = fd.define_scalar(1, dtype=DataType.Int)
    S9 = fd.define_scalar(288, dtype=DataType.Int)
    S10 = fd.define_scalar(1, dtype=DataType.Int)
    S11 = fd.define_scalar(1, dtype=DataType.Int)
    V12 = fd.define_vector([S8, S9, S10, S11], dtype=DataType.Int)
    T13 = fd.ops.reshape(T1, new_shape=V12)
    S14 = fd.define_scalar(1, dtype=DataType.Int)
    S15 = fd.define_scalar(288, dtype=DataType.Int)
    S16 = fd.define_scalar(1, dtype=DataType.Int)
    S17 = fd.define_scalar(1, dtype=DataType.Int)
    V18 = fd.define_vector([S14, S15, S16, S17], dtype=DataType.Int)
    T19 = fd.ops.reshape(T2, new_shape=V18)
    S20 = fd.define_scalar(22, dtype=DataType.Int)
    S21 = fd.define_scalar(288, dtype=DataType.Int)
    S22 = fd.define_scalar(15, dtype=DataType.Int)
    S23 = fd.define_scalar(20, dtype=DataType.Int)
    V24 = fd.define_vector([S20, S21, S22, S23], dtype=DataType.Int)
    T25 = fd.ops.broadcast_in_dim(T19, shape=V24, broadcast_dims=[0, 1, 2, 3])
    T26 = fd.ops.sub(T7, T25)
    S27 = fd.define_scalar(22, dtype=DataType.Int)
    S28 = fd.define_scalar(288, dtype=DataType.Int)
    S29 = fd.define_scalar(15, dtype=DataType.Int)
    S30 = fd.define_scalar(20, dtype=DataType.Int)
    V31 = fd.define_vector([S27, S28, S29, S30], dtype=DataType.Int)
    T32 = fd.ops.broadcast_in_dim(T13, shape=V31, broadcast_dims=[0, 1, 2, 3])
    T33 = fd.ops.mul(T26, T32)
    T34 = fd.ops.ne(T3, T3)
    S35 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T36 = fd.ops.gt(T3, S35)
    S37 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T38 = fd.ops.where(T36, T3, S37)
    T39 = fd.ops.where(T34, T3, T38)
    T40 = fd.ops.ne(T39, T39)
    S41 = fd.define_scalar(6.00000, dtype=DataType.Double)
    T42 = fd.ops.lt(T39, S41)
    S43 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T44 = fd.ops.pad(T4, [0, 0, -1, -1, 0, 0, 0, 0], S43)
    T45 = fd.ops.cast(T5, dtype=DataType.Float)
    S46 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T47 = fd.ops.where(T40, T44, S46)
    S48 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T49 = fd.ops.where(T40, S48, T44)
    S50 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T51 = fd.ops.where(T42, T49, S50)
    T52 = fd.ops.cast(T47, dtype=DataType.Float)
    T53 = fd.ops.cast(T51, dtype=DataType.Float)
    T54 = fd.ops.add(T52, T53)
    T55 = fd.ops.cast(T54, dtype=DataType.Half)
    S56 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T57 = fd.ops.where(T34, T55, S56)
    S58 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T59 = fd.ops.where(T34, S58, T55)
    S60 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T61 = fd.ops.where(T36, T59, S60)
    T62 = fd.ops.cast(T57, dtype=DataType.Float)
    T63 = fd.ops.cast(T61, dtype=DataType.Float)
    T64 = fd.ops.add(T62, T63)
    T65 = fd.ops.sum(T64, dims=[0, 2, 3], keepdim=False, dtype=DataType.Null)
    T66 = fd.ops.mul(T6, T64)
    T67 = fd.ops.mul(T33, T64)
    T68 = fd.ops.sum(T67, dims=[0, 2, 3], keepdim=False, dtype=DataType.Null)
    T69 = fd.ops.mul(T32, T66)
    T70 = fd.ops.mul(T26, T66)
    T71 = fd.ops.sum(T70, dims=[0, 2, 3], keepdim=False, dtype=DataType.Null)
    # S72 = fd.define_scalar(1, dtype=DataType.Int)
    # S73 = fd.define_scalar(288, dtype=DataType.Int)
    # S74 = fd.define_scalar(1, dtype=DataType.Int)
    # S75 = fd.define_scalar(1, dtype=DataType.Int)
    # V76 = fd.define_vector([S72, S73, S74, S75], dtype=DataType.Int)
    # T77 = fd.ops.broadcast_in_dim(T71, shape=V76, broadcast_dims=[1])
    T78 = fd.ops.neg(T69)
    T79 = fd.ops.sum(T78, dims=[0, 2, 3], keepdim=False, dtype=DataType.Null)
    # S80 = fd.define_scalar(1, dtype=DataType.Int)
    # S81 = fd.define_scalar(288, dtype=DataType.Int)
    # S82 = fd.define_scalar(1, dtype=DataType.Int)
    # S83 = fd.define_scalar(1, dtype=DataType.Int)
    # V84 = fd.define_vector([S80, S81, S82, S83], dtype=DataType.Int)
    # T85 = fd.ops.broadcast_in_dim(T79, shape=V84, broadcast_dims=[1])
    # S86 = fd.define_scalar(288, dtype=DataType.Int)
    # V87 = fd.define_vector([S86], dtype=DataType.Int)
    # T88 = fd.ops.reshape(T85, new_shape=V87)
    T88 = fd.ops.set(T79)
    # S89 = fd.define_scalar(288, dtype=DataType.Int)
    # V90 = fd.define_vector([S89], dtype=DataType.Int)
    # T91 = fd.ops.reshape(T77, new_shape=V90)
    T91 = fd.ops.set(T71)
    S92 = fd.define_scalar(-0.500000, dtype=DataType.Double)
    T93 = fd.ops.mul(S92, T91)
    S94 = fd.define_scalar(3.00000, dtype=DataType.Double)
    T95 = fd.ops.pow(T1, S94)
    T96 = fd.ops.mul(T93, T95)
    S97 = fd.define_scalar(1, dtype=DataType.Int)
    S98 = fd.define_scalar(288, dtype=DataType.Int)
    S99 = fd.define_scalar(1, dtype=DataType.Int)
    S100 = fd.define_scalar(1, dtype=DataType.Int)
    V101 = fd.define_vector([S97, S98, S99, S100], dtype=DataType.Int)
    T102 = fd.ops.broadcast_in_dim(T88, shape=V101, broadcast_dims=[1])
    S103 = fd.define_scalar(22, dtype=DataType.Int)
    S104 = fd.define_scalar(288, dtype=DataType.Int)
    S105 = fd.define_scalar(15, dtype=DataType.Int)
    S106 = fd.define_scalar(20, dtype=DataType.Int)
    V107 = fd.define_vector([S103, S104, S105, S106], dtype=DataType.Int)
    T108 = fd.ops.broadcast_in_dim(T102, shape=V107, broadcast_dims=[0, 1, 2, 3])
    S109 = fd.define_scalar(0.000151515, dtype=DataType.Double)
    T110 = fd.ops.mul(S109, T108)
    S111 = fd.define_scalar(1, dtype=DataType.Int)
    S112 = fd.define_scalar(288, dtype=DataType.Int)
    S113 = fd.define_scalar(1, dtype=DataType.Int)
    S114 = fd.define_scalar(1, dtype=DataType.Int)
    V115 = fd.define_vector([S111, S112, S113, S114], dtype=DataType.Int)
    T116 = fd.ops.broadcast_in_dim(T96, shape=V115, broadcast_dims=[1])
    S117 = fd.define_scalar(22, dtype=DataType.Int)
    S118 = fd.define_scalar(288, dtype=DataType.Int)
    S119 = fd.define_scalar(15, dtype=DataType.Int)
    S120 = fd.define_scalar(20, dtype=DataType.Int)
    V121 = fd.define_vector([S117, S118, S119, S120], dtype=DataType.Int)
    T122 = fd.ops.broadcast_in_dim(T116, shape=V121, broadcast_dims=[0, 1, 2, 3])
    S123 = fd.define_scalar(1, dtype=DataType.Int)
    S124 = fd.define_scalar(288, dtype=DataType.Int)
    S125 = fd.define_scalar(1, dtype=DataType.Int)
    S126 = fd.define_scalar(1, dtype=DataType.Int)
    V127 = fd.define_vector([S123, S124, S125, S126], dtype=DataType.Int)
    T128 = fd.ops.broadcast_in_dim(T2, shape=V127, broadcast_dims=[1])
    S129 = fd.define_scalar(22, dtype=DataType.Int)
    S130 = fd.define_scalar(288, dtype=DataType.Int)
    S131 = fd.define_scalar(15, dtype=DataType.Int)
    S132 = fd.define_scalar(20, dtype=DataType.Int)
    V133 = fd.define_vector([S129, S130, S131, S132], dtype=DataType.Int)
    T134 = fd.ops.broadcast_in_dim(T128, shape=V133, broadcast_dims=[0, 1, 2, 3])
    S135 = fd.define_scalar(2.00000, dtype=DataType.Double)
    T136 = fd.ops.mul(S135, T122)
    T137 = fd.ops.sub(T7, T134)
    T138 = fd.ops.mul(T136, T137)
    S139 = fd.define_scalar(6600.00, dtype=DataType.Double)
    S140 = fd.ops.reciprocal(S139)
    T141 = fd.ops.mul(T138, S140)
    T142 = fd.ops.add(T110, T141)
    T143 = fd.ops.add(T69, T142)
    T144 = fd.ops.cast(T143, dtype=DataType.Half)
    S145 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T146 = fd.ops.pad(T144, [0, 0, 0, 0, 0, 0, 0, 0], S145)
    fd.add_output(T45)
    fd.add_output(T65)
    fd.add_output(T68)
    fd.add_output(T144)
    fd.add_output(T146)

with FusionDefinition() as fd:
    nvfuser_fusion_id50(fd)

inputs = [
    torch.randn((1900800,), dtype=torch.float16, device='cuda:0').as_strided((22, 288, 15, 20), (86400, 300, 20, 1)),
    torch.randn((288,), dtype=torch.float32, device='cuda:0').as_strided((288,), (1,)),
    torch.randn((288,), dtype=torch.float32, device='cuda:0').as_strided((288,), (1,)),
    torch.randn((1900800,), dtype=torch.float16, device='cuda:0').as_strided((22, 288, 15, 20), (86400, 300, 20, 1)),
    torch.randn((2154240,), dtype=torch.float16, device='cuda:0').as_strided((22, 288, 17, 20), (97920, 340, 20, 1)),
    torch.randn((82944,), dtype=torch.float16, device='cuda:0').as_strided((288, 96, 3, 1), (3, 864, 1, 1)),
    torch.randn((288,), dtype=torch.float32, device='cuda:0').as_strided((22, 288, 15, 20), (0, 1, 0, 0)),
]
fd.execute(inputs)
