[W812 15:48:20.452210392 nodes.cpp:5173] Warning: Unroll required but not possible. Register allocation disabled. Loop index: 0, FOR 0 in ideviceIdx.x107{1}:
  FOR blockIdx.x in iblockIdx.x331{( ceilDiv(4608, blockDim.x) )}:
    FOR threadIdx.x in ithreadIdx.x330{blockDim.x}:
      T17_l_float[ideviceIdx.x146{1}, iblockIdx.x152{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x151{blockDim.x}, rS161{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}rf, iUS153{1}, iS149{8}, iblockIdx.y160{gridDim.y}rf, ithreadIdx.y155{blockDim.y}rf, rUS159{1}rf, rS157{4}rf] ca_pos( 3 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T17_l_float[ideviceIdx.x146{1}, iblockIdx.x152{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x151{blockDim.x}, rS161{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}rf, iUS153{1}, iS149{8}, iblockIdx.y160{gridDim.y}rf, ithreadIdx.y155{blockDim.y}rf, rUS159{1}rf, rS157{4}rf] ca_pos( 3 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=8, zero_init=false, resets_to_zero=false)
      IF Unswitch true:
        FOR 0 in iUS332{1}:
          FOR i12218 in iS328{8}:
            FOR blockIdx.y in iblockIdx.y339{gridDim.y}:
              FOR threadIdx.y in ithreadIdx.y334{blockDim.y}:
                IF Manual true:
                  T17_l[i12218] view( T17 )
                     = Set.Permute( float(0), cache_op=Streaming )
      ELSE:
        FOR 0 in iUS332{1}:
          FOR i12218 in iS328{8}:
            FOR blockIdx.y in iblockIdx.y339{gridDim.y}:
              FOR threadIdx.y in ithreadIdx.y334{blockDim.y}:
                IF Inline true:
                  T17_l[i12218] view( T17 )
                     = Set.Permute( float(0), cache_op=Streaming )
      FOR i12217 in iS340{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}:
        i14105 = ALLOCATE(buffer=i14105, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i14105 = i14062 * i12217;
        i14106 = ALLOCATE(buffer=i14106, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i14106 = i14104 + i14105;
        i15377 = ALLOCATE(buffer=i15377, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i15377 = i15376 + i14105;
        i16639 = ALLOCATE(buffer=i16639, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i16639 = i16638 + i14105;
        i17683 = ALLOCATE(buffer=i17683, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i17683 = i17666 + i17682;
        i23488 = ALLOCATE(buffer=i23488, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i23488 = i23464 * i12217;
        i24178 = ALLOCATE(buffer=i24178, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
        i24178 = i24177 + i23488;
        IF Unswitch ( ( ( ( 7 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < 36864 ) && ( ( ( ( ( ( ( blockDim.y * 4 ) * blockIdx.y ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) + ( blockDim.y * 3 ) ) + threadIdx.y ) + ( ( blockDim.y * 4 ) * i12217 ) ) < 2048 ) ):
          FOR 0 in iUS332{1}:
            FOR i12218 in iS328{8}:
              i14107 = ALLOCATE(buffer=i14107, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i14107 = i14106 + i12218;
              i14406 = ALLOCATE(buffer=i14406, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i14406 = -i12218;
              b14472 = ALLOCATE(buffer=b14472, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b14472 = i14471 < i14406;
              i15378 = ALLOCATE(buffer=i15378, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i15378 = i15377 + i12218;
              b15734 = ALLOCATE(buffer=b15734, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b15734 = i15733 >= i14406;
              i16640 = ALLOCATE(buffer=i16640, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i16640 = i16639 + i12218;
              b17212 = ALLOCATE(buffer=b17212, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b17212 = b17210 && b17211;
              i17684 = ALLOCATE(buffer=i17684, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i17684 = i17683 + i12218;
              FOR blockIdx.y in iblockIdx.y339{gridDim.y}:
                FOR threadIdx.y in ithreadIdx.y334{blockDim.y}:
                  FOR 0 in iUS338{1}:
                    FOR i12219 in iS336{4}:
                      i13279 = ALLOCATE(buffer=i13279, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      i13279 = i12219 + nvfuser_zero;
                      i14098 = ALLOCATE(buffer=i14098, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      i14098 = i14096 * i13279;
                      T3_l___bfloat[ideviceIdx.x125{1}, iblockIdx.x289{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x288{blockDim.x}, iS298{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS290{1}, iS286{8}, iblockIdx.y297{gridDim.y}, ithreadIdx.y292{blockDim.y}, iUS296{1}, iS294{4}, bS12{1}] ca_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T3_l___bfloat[ideviceIdx.x125{1}, iblockIdx.x289{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x288{blockDim.x}, iS298{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS290{1}, iS286{8}, iblockIdx.y297{gridDim.y}, ithreadIdx.y292{blockDim.y}, iUS296{1}, iS294{4}, bS12{1}] ca_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Manual true:
                        T3_l[0] view( T3 )
                           = Set.Permute( 0, cache_op=Streaming )
                      FOR 0 in bS12{1}:
                        IF Manual true:
                          T3_l[0] view( T3 )
                             = where(b14472
                            , T0_g[( ( ( ( ( ( ( 128 * threadIdx.y ) + ( ( ( blockDim.y * 512 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 262144 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) / 48 ) ) ) + ( 8 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) % 48 ) ) ) + ( ( blockDim.y * 512 ) * i12217 ) ) + i12218 ) + ( ( 128 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T0 )
                            , __bfloat(0));
                      T5_l___bfloat[ideviceIdx.x113{1}, iblockIdx.x356{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x232{blockDim.x}, iS242{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS234{1}, iS230{8}, iblockIdx.y241{gridDim.y}, ithreadIdx.y236{blockDim.y}, iUS240{1}, iS238{4}, bS22{1}] ca_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T5_l___bfloat[ideviceIdx.x113{1}, iblockIdx.x356{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x232{blockDim.x}, iS242{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS234{1}, iS230{8}, iblockIdx.y241{gridDim.y}, ithreadIdx.y236{blockDim.y}, iUS240{1}, iS238{4}, bS22{1}] ca_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Manual true:
                        T5_l[0] view( T5 )
                           = Set.Permute( 0, cache_op=Streaming )
                      FOR 0 in bS22{1}:
                        IF Manual true:
                          T5_l[0] view( T5 )
                             = where(b15734
                            , T2_g[( ( ( ( ( ( ( -256 + ( 128 * threadIdx.y ) ) + ( ( ( blockDim.y * 512 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 262144 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) / 48 ) ) ) + ( 8 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) % 48 ) ) ) + ( ( blockDim.y * 512 ) * i12217 ) ) + i12218 ) + ( ( 128 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T2 )
                            , __bfloat(0));
                      T4_l___bfloat[ideviceIdx.x119{1}, iblockIdx.x354{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x260{blockDim.x}, iS270{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS262{1}, iS258{8}, iblockIdx.y269{gridDim.y}, ithreadIdx.y264{blockDim.y}, iUS268{1}, iS266{4}, bS17{1}] ca_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T4_l___bfloat[ideviceIdx.x119{1}, iblockIdx.x354{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x260{blockDim.x}, iS270{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS262{1}, iS258{8}, iblockIdx.y269{gridDim.y}, ithreadIdx.y264{blockDim.y}, iUS268{1}, iS266{4}, bS17{1}] ca_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Manual true:
                        T4_l[0] view( T4 )
                           = Set.Permute( 0, cache_op=Streaming )
                      FOR 0 in bS17{1}:
                        IF Manual true:
                          T4_l[0] view( T4 )
                             = where(b17212
                            , T1_g[( ( ( ( ( ( ( -128 + ( 128 * threadIdx.y ) ) + ( ( ( blockDim.y * 512 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 262144 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) / 48 ) ) ) + ( 8 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) % 48 ) ) ) + ( ( blockDim.y * 512 ) * i12217 ) ) + i12218 ) + ( ( 128 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T1 )
                            , __bfloat(0));
                      T6_l___bfloat[ideviceIdx.x110{1}, iblockIdx.x219{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x218{blockDim.x}, iS228{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS220{1}, iS216{8}, iblockIdx.y227{gridDim.y}, ithreadIdx.y222{blockDim.y}, iUS226{1}, iS224{4}, bS27{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T6_l___bfloat[ideviceIdx.x110{1}, iblockIdx.x219{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x218{blockDim.x}, iS228{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS220{1}, iS216{8}, iblockIdx.y227{gridDim.y}, ithreadIdx.y222{blockDim.y}, iUS226{1}, iS224{4}, bS27{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS27{1}:
                        IF Manual true:
                          T6_l[0] view( T6 )
                             = f17281
                             | T5_l[0] view( T5 );
                      T7_l___bfloat[ideviceIdx.x64{1}, iblockIdx.x205{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x204{blockDim.x}, iS214{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS206{1}, iS202{8}, iblockIdx.y213{gridDim.y}, ithreadIdx.y208{blockDim.y}, iUS212{1}, iS210{4}, bS31{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T7_l___bfloat[ideviceIdx.x64{1}, iblockIdx.x205{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x204{blockDim.x}, iS214{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS206{1}, iS202{8}, iblockIdx.y213{gridDim.y}, ithreadIdx.y208{blockDim.y}, iUS212{1}, iS210{4}, bS31{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS31{1}:
                        IF Manual true:
                          T7_l[0] view( T7 )
                             = Set.Permute( T6_l[0] view( T6 ), cache_op=Streaming )
                      T8_l_float[ideviceIdx.x66{1}, iblockIdx.x191{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x190{blockDim.x}, iS200{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS192{1}, iS188{8}, iblockIdx.y199{gridDim.y}, ithreadIdx.y194{blockDim.y}, iUS198{1}, iS196{4}, bS38{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T8_l_float[ideviceIdx.x66{1}, iblockIdx.x191{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x190{blockDim.x}, iS200{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS192{1}, iS188{8}, iblockIdx.y199{gridDim.y}, ithreadIdx.y194{blockDim.y}, iUS198{1}, iS196{4}, bS38{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS38{1}:
                        IF Manual true:
                          T8_l[0] view( T8 )
                             = __bfloat2float(T7_l[0] view( T7 ));
                      T16_l___bfloat[ideviceIdx.x81{1}, iblockIdx.x317{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x316{blockDim.x}, iS326{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS318{1}, iS314{8}, iblockIdx.y325{gridDim.y}, ithreadIdx.y320{blockDim.y}, iUS324{1}, iS322{4}, bS78{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T16_l___bfloat[ideviceIdx.x81{1}, iblockIdx.x317{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x316{blockDim.x}, iS326{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS318{1}, iS314{8}, iblockIdx.y325{gridDim.y}, ithreadIdx.y320{blockDim.y}, iUS324{1}, iS322{4}, bS78{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS78{1}:
                        IF Manual true:
                          T16_l[0] view( T16 )
                             = Set( T7_l[0] view( T7 ), cache_op=Streaming )
                      FOR 0 in bS104{1}:
                        IF Manual true:
                          T14_g[( ( ( ( ( ( ( 36864 * threadIdx.y ) + ( ( ( blockDim.y * 147456 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) + ( ( blockDim.y * 147456 ) * i12217 ) ) + i12218 ) + ( ( 36864 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T14 )
                             = Set( T16_l[0] view( T16 ), cache_op=Streaming )
                      T9_l_float[ideviceIdx.x68{1}, iblockIdx.x177{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x176{blockDim.x}, iS186{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS178{1}, iS174{8}, iblockIdx.y185{gridDim.y}, ithreadIdx.y180{blockDim.y}, iUS184{1}, iS182{4}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T9_l_float[ideviceIdx.x68{1}, iblockIdx.x177{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x176{blockDim.x}, iS186{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS178{1}, iS174{8}, iblockIdx.y185{gridDim.y}, ithreadIdx.y180{blockDim.y}, iUS184{1}, iS182{4}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Manual true:
                        T9_l[0] view( T9 )
                           = Set( T8_l[0] view( T8 ), cache_op=Streaming )
                      IF Manual true:
                        T17_l[i12218] view( T17 )
                           = T17_l[i12218] view( T17 )
                           + T9_l[0] view( T9 );
        ELSE:
          FOR 0 in iUS332{1}:
            FOR i12218 in iS328{8}:
              i18712 = ALLOCATE(buffer=i18712, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i18712 = i14106 + i12218;
              i19012 = ALLOCATE(buffer=i19012, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i19012 = -i12218;
              b19077 = ALLOCATE(buffer=b19077, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b19077 = i14471 < i19012;
              i19978 = ALLOCATE(buffer=i19978, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i19978 = i15377 + i12218;
              b20333 = ALLOCATE(buffer=b20333, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b20333 = i15733 >= i19012;
              i21234 = ALLOCATE(buffer=i21234, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i21234 = i16639 + i12218;
              b21806 = ALLOCATE(buffer=b21806, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b21806 = b21804 && b21805;
              i22276 = ALLOCATE(buffer=i22276, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              i22276 = i17683 + i12218;
              b24174 = ALLOCATE(buffer=b24174, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
              b24174 = i24173 < i24105;
              FOR blockIdx.y in iblockIdx.y339{gridDim.y}:
                FOR threadIdx.y in ithreadIdx.y334{blockDim.y}:
                  FOR 0 in iUS338{1}:
                    FOR i12219 in iS336{4}:
                      i17889 = ALLOCATE(buffer=i17889, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      i17889 = i12219 + nvfuser_zero;
                      i18713 = ALLOCATE(buffer=i18713, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      i18713 = i14096 * i17889;
                      b24182 = ALLOCATE(buffer=b24182, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      b24182 = b24174 && b24181;
                      T3_l___bfloat[ideviceIdx.x125{1}, iblockIdx.x289{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x288{blockDim.x}, iS298{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS290{1}, iS286{8}, iblockIdx.y297{gridDim.y}, ithreadIdx.y292{blockDim.y}, iUS296{1}, iS294{4}, bS12{1}] ca_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T3_l___bfloat[ideviceIdx.x125{1}, iblockIdx.x289{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x288{blockDim.x}, iS298{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS290{1}, iS286{8}, iblockIdx.y297{gridDim.y}, ithreadIdx.y292{blockDim.y}, iUS296{1}, iS294{4}, bS12{1}] ca_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Inline true:
                        T3_l[0] view( T3 )
                           = Set.Permute( 0, cache_op=Streaming )
                      FOR 0 in bS12{1}:
                        IF Inline ( ( ( ( -36864 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < ( -( i12218 + nvfuser_zero ) ) ) && ( ( ( ( -2048 + threadIdx.y ) + ( ( ( blockDim.y * 4 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( ( blockDim.y * 4 ) * i12217 ) ) < ( -( blockDim.y * ( i12219 + nvfuser_zero ) ) ) ) ):
                          T3_l[0] view( T3 )
                             = where(b19077
                            , T0_g[( ( ( ( ( ( ( 128 * threadIdx.y ) + ( ( ( blockDim.y * 512 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 262144 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) / 48 ) ) ) + ( 8 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) % 48 ) ) ) + ( ( blockDim.y * 512 ) * i12217 ) ) + i12218 ) + ( ( 128 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T0 )
                            , __bfloat(0));
                      T5_l___bfloat[ideviceIdx.x113{1}, iblockIdx.x356{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x232{blockDim.x}, iS242{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS234{1}, iS230{8}, iblockIdx.y241{gridDim.y}, ithreadIdx.y236{blockDim.y}, iUS240{1}, iS238{4}, bS22{1}] ca_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T5_l___bfloat[ideviceIdx.x113{1}, iblockIdx.x356{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x232{blockDim.x}, iS242{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS234{1}, iS230{8}, iblockIdx.y241{gridDim.y}, ithreadIdx.y236{blockDim.y}, iUS240{1}, iS238{4}, bS22{1}] ca_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Inline true:
                        T5_l[0] view( T5 )
                           = Set.Permute( 0, cache_op=Streaming )
                      FOR 0 in bS22{1}:
                        IF Inline ( ( ( ( -36864 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < ( -( i12218 + nvfuser_zero ) ) ) && ( ( ( ( -2048 + threadIdx.y ) + ( ( ( blockDim.y * 4 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( ( blockDim.y * 4 ) * i12217 ) ) < ( -( blockDim.y * ( i12219 + nvfuser_zero ) ) ) ) ):
                          T5_l[0] view( T5 )
                             = where(b20333
                            , T2_g[( ( ( ( ( ( ( -256 + ( 128 * threadIdx.y ) ) + ( ( ( blockDim.y * 512 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 262144 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) / 48 ) ) ) + ( 8 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) % 48 ) ) ) + ( ( blockDim.y * 512 ) * i12217 ) ) + i12218 ) + ( ( 128 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T2 )
                            , __bfloat(0));
                      T4_l___bfloat[ideviceIdx.x119{1}, iblockIdx.x354{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x260{blockDim.x}, iS270{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS262{1}, iS258{8}, iblockIdx.y269{gridDim.y}, ithreadIdx.y264{blockDim.y}, iUS268{1}, iS266{4}, bS17{1}] ca_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T4_l___bfloat[ideviceIdx.x119{1}, iblockIdx.x354{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x260{blockDim.x}, iS270{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS262{1}, iS258{8}, iblockIdx.y269{gridDim.y}, ithreadIdx.y264{blockDim.y}, iUS268{1}, iS266{4}, bS17{1}] ca_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Inline true:
                        T4_l[0] view( T4 )
                           = Set.Permute( 0, cache_op=Streaming )
                      FOR 0 in bS17{1}:
                        IF Inline ( ( ( ( -36864 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < ( -( i12218 + nvfuser_zero ) ) ) && ( ( ( ( -2048 + threadIdx.y ) + ( ( ( blockDim.y * 4 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( ( blockDim.y * 4 ) * i12217 ) ) < ( -( blockDim.y * ( i12219 + nvfuser_zero ) ) ) ) ):
                          T4_l[0] view( T4 )
                             = where(b21806
                            , T1_g[( ( ( ( ( ( ( -128 + ( 128 * threadIdx.y ) ) + ( ( ( blockDim.y * 512 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 262144 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) / 48 ) ) ) + ( 8 * ( ( threadIdx.x + ( blockDim.x * blockIdx.x ) ) % 48 ) ) ) + ( ( blockDim.y * 512 ) * i12217 ) ) + i12218 ) + ( ( 128 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T1 )
                            , __bfloat(0));
                      T6_l___bfloat[ideviceIdx.x110{1}, iblockIdx.x219{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x218{blockDim.x}, iS228{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS220{1}, iS216{8}, iblockIdx.y227{gridDim.y}, ithreadIdx.y222{blockDim.y}, iUS226{1}, iS224{4}, bS27{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T6_l___bfloat[ideviceIdx.x110{1}, iblockIdx.x219{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x218{blockDim.x}, iS228{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS220{1}, iS216{8}, iblockIdx.y227{gridDim.y}, ithreadIdx.y222{blockDim.y}, iUS226{1}, iS224{4}, bS27{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS27{1}:
                        IF Inline true:
                          T6_l[0] view( T6 )
                             = f21875
                             | T5_l[0] view( T5 );
                      T7_l___bfloat[ideviceIdx.x64{1}, iblockIdx.x205{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x204{blockDim.x}, iS214{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS206{1}, iS202{8}, iblockIdx.y213{gridDim.y}, ithreadIdx.y208{blockDim.y}, iUS212{1}, iS210{4}, bS31{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T7_l___bfloat[ideviceIdx.x64{1}, iblockIdx.x205{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x204{blockDim.x}, iS214{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS206{1}, iS202{8}, iblockIdx.y213{gridDim.y}, ithreadIdx.y208{blockDim.y}, iUS212{1}, iS210{4}, bS31{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS31{1}:
                        IF Inline true:
                          T7_l[0] view( T7 )
                             = Set.Permute( T6_l[0] view( T6 ), cache_op=Streaming )
                      T8_l_float[ideviceIdx.x66{1}, iblockIdx.x191{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x190{blockDim.x}, iS200{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS192{1}, iS188{8}, iblockIdx.y199{gridDim.y}, ithreadIdx.y194{blockDim.y}, iUS198{1}, iS196{4}, bS38{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T8_l_float[ideviceIdx.x66{1}, iblockIdx.x191{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x190{blockDim.x}, iS200{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS192{1}, iS188{8}, iblockIdx.y199{gridDim.y}, ithreadIdx.y194{blockDim.y}, iUS198{1}, iS196{4}, bS38{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS38{1}:
                        IF Inline true:
                          T8_l[0] view( T8 )
                             = __bfloat2float(T7_l[0] view( T7 ));
                      T16_l___bfloat[ideviceIdx.x81{1}, iblockIdx.x317{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x316{blockDim.x}, iS326{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS318{1}, iS314{8}, iblockIdx.y325{gridDim.y}, ithreadIdx.y320{blockDim.y}, iUS324{1}, iS322{4}, bS78{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T16_l___bfloat[ideviceIdx.x81{1}, iblockIdx.x317{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x316{blockDim.x}, iS326{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS318{1}, iS314{8}, iblockIdx.y325{gridDim.y}, ithreadIdx.y320{blockDim.y}, iUS324{1}, iS322{4}, bS78{1}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      FOR 0 in bS78{1}:
                        IF Inline true:
                          T16_l[0] view( T16 )
                             = Set( T7_l[0] view( T7 ), cache_op=Streaming )
                      FOR 0 in bS104{1}:
                        IF Inline ( ( ( ( -36864 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < ( -( i12218 + nvfuser_zero ) ) ) && ( ( ( ( -2048 + threadIdx.y ) + ( ( ( blockDim.y * 4 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( ( blockDim.y * 4 ) * i12217 ) ) < ( -( blockDim.y * ( i12219 + nvfuser_zero ) ) ) ) ):
                          T14_g[( ( ( ( ( ( ( 36864 * threadIdx.y ) + ( ( ( blockDim.y * 147456 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) + ( ( blockDim.y * 147456 ) * i12217 ) ) + i12218 ) + ( ( 36864 * blockDim.y ) * ( i12219 + nvfuser_zero ) ) )] view( T14 )
                             = Set( T16_l[0] view( T16 ), cache_op=Streaming )
                      T9_l_float[ideviceIdx.x68{1}, iblockIdx.x177{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x176{blockDim.x}, iS186{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS178{1}, iS174{8}, iblockIdx.y185{gridDim.y}, ithreadIdx.y180{blockDim.y}, iUS184{1}, iS182{4}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}) = ALLOCATE(buffer=T9_l_float[ideviceIdx.x68{1}, iblockIdx.x177{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x176{blockDim.x}, iS186{( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) )}, iUS178{1}, iS174{8}, iblockIdx.y185{gridDim.y}, ithreadIdx.y180{blockDim.y}, iUS184{1}, iS182{4}] ca_pos( 10 ) produce_pos( 10 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
                      IF Inline true:
                        T9_l[0] view( T9 )
                           = Set( T8_l[0] view( T8 ), cache_op=Streaming )
                      IF Inline ( ( ( ( -36864 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < ( -( i12218 + nvfuser_zero ) ) ) && ( ( ( ( -2048 + threadIdx.y ) + ( ( ( blockDim.y * 4 ) * ( ceilDiv(( ceilDiv(( ceilDiv(2048, blockDim.y) ), 4) ), gridDim.y) ) ) * blockIdx.y ) ) + ( ( blockDim.y * 4 ) * i12217 ) ) < ( -( blockDim.y * ( i12219 + nvfuser_zero ) ) ) ) ):
                        T17_l[i12218] view( T17 )
                           = T17_l[i12218] view( T17 )
                           + T9_l[0] view( T9 );
      IF Unswitch ( ( ( 7 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < 36864 ):
        FOR 0 in iUS352{1}:
          T10_l_float[ideviceIdx.x165{1}, iblockIdx.x171{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x170{blockDim.x}, iUS172{1}, iG168{8}, rblockIdx.y162{gridDim.y}, rthreadIdx.y163{blockDim.y}] ca_pos( 4 ) produce_pos( 3 ) (DeviceMesh{0}) = ALLOCATE(buffer=T10_l_float[ideviceIdx.x165{1}, iblockIdx.x171{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x170{blockDim.x}, iUS172{1}, iG168{8}, rblockIdx.y162{gridDim.y}, rthreadIdx.y163{blockDim.y}] ca_pos( 4 ) produce_pos( 3 ) (DeviceMesh{0}), mem_type=register, size=8, zero_init=false, resets_to_zero=false)
          FOR i12061 in iG168{8}:
            IF Manual true:
              T10_l[i12061] view( T10 )
                 = Set( float(0), cache_op=Streaming )
          FOR i12061 in iG168{8}:
            FOR blockIdx.y in rblockIdx.y162{gridDim.y}:
              FOR threadIdx.y in rthreadIdx.y163{blockDim.y}:
                GroupedGridReduction(
                  T10_l[i12061] view( T10 ) = reduction( T17_l[i12061] view( T17 ), op = add, initial value = float(0), reduction buffer = T18_g_float[iS358{( ( ( gridDim.x * gridDim.y ) * blockDim.x ) * 8 )}] )
                  sync buffer = T19_g_int64_t[iS359{( gridDim.x * 8 )}],
                  read predicate = Manual true,
                  write predicate = Manual true,
                  thread predicate = (),
                  allreduce = false )
          FOR i12194 in iS348{8}:
            T15_l___bfloat[ideviceIdx.x72{1}, iblockIdx.x345{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x344{blockDim.x}, iUS346{1}, iS342{8}] ca_pos( 5 ) produce_pos( 4 ) (DeviceMesh{0}) = ALLOCATE(buffer=T15_l___bfloat[ideviceIdx.x72{1}, iblockIdx.x345{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x344{blockDim.x}, iUS346{1}, iS342{8}] ca_pos( 5 ) produce_pos( 4 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
            IF Manual ( ( blockIdx.y == ( gridDim.y + -1 ) ) && ( threadIdx.y == 0 ) ):
              T15_l[0] view( T15 )
                 = __float2bfloat(T10_l[i12194] view( T10 ));
            IF Manual ( ( blockIdx.y == ( gridDim.y + -1 ) ) && ( threadIdx.y == 0 ) ):
              T11_g[( ( ( 8 * threadIdx.x ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) + ( i12194 + nvfuser_zero ) )] view( T11 )
                 = Set( T15_l[0] view( T15 ), cache_op=Streaming )
      ELSE:
        FOR 0 in iUS352{1}:
          T10_l_float[ideviceIdx.x165{1}, iblockIdx.x171{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x170{blockDim.x}, iUS172{1}, iG168{8}, rblockIdx.y162{gridDim.y}, rthreadIdx.y163{blockDim.y}] ca_pos( 4 ) produce_pos( 3 ) (DeviceMesh{0}) = ALLOCATE(buffer=T10_l_float[ideviceIdx.x165{1}, iblockIdx.x171{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x170{blockDim.x}, iUS172{1}, iG168{8}, rblockIdx.y162{gridDim.y}, rthreadIdx.y163{blockDim.y}] ca_pos( 4 ) produce_pos( 3 ) (DeviceMesh{0}), mem_type=register, size=8, zero_init=false, resets_to_zero=false)
          FOR i12061 in iG168{8}:
            IF Inline true:
              T10_l[i12061] view( T10 )
                 = Set( float(0), cache_op=Streaming )
          FOR i12061 in iG168{8}:
            FOR blockIdx.y in rblockIdx.y162{gridDim.y}:
              FOR threadIdx.y in rthreadIdx.y163{blockDim.y}:
                GroupedGridReduction(
                  T10_l[i12061] view( T10 ) = reduction( T17_l[i12061] view( T17 ), op = add, initial value = float(0), reduction buffer = T18_g_float[iS358{( ( ( gridDim.x * gridDim.y ) * blockDim.x ) * 8 )}] )
                  sync buffer = T19_g_int64_t[iS359{( gridDim.x * 8 )}],
                  read predicate = Inline true,
                  write predicate = ReductionWrite true,
                  thread predicate = (),
                  allreduce = false )
          FOR i12194 in iS348{8}:
            i22762 = ALLOCATE(buffer=i22762, mem_type=register, size=1, zero_init=false, resets_to_zero=false)
            i22762 = i12194 + nvfuser_zero;
            T15_l___bfloat[ideviceIdx.x72{1}, iblockIdx.x345{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x344{blockDim.x}, iUS346{1}, iS342{8}] ca_pos( 5 ) produce_pos( 4 ) (DeviceMesh{0}) = ALLOCATE(buffer=T15_l___bfloat[ideviceIdx.x72{1}, iblockIdx.x345{( ceilDiv(4608, blockDim.x) )}, ithreadIdx.x344{blockDim.x}, iUS346{1}, iS342{8}] ca_pos( 5 ) produce_pos( 4 ) (DeviceMesh{0}), mem_type=register, size=1, zero_init=false, resets_to_zero=false)
            IF Inline true:
              T15_l[0] view( T15 )
                 = __float2bfloat(T10_l[i12194] view( T10 ));
            IF Inline ( ( ( blockIdx.y == ( gridDim.y + -1 ) ) && ( threadIdx.y == 0 ) ) && ( ( ( -36864 + ( 8 * threadIdx.x ) ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) < ( -( i12194 + nvfuser_zero ) ) ) ):
              T11_g[( ( ( 8 * threadIdx.x ) + ( ( 8 * blockDim.x ) * blockIdx.x ) ) + ( i12194 + nvfuser_zero ) )] view( T11 )
                 = Set( T15_l[0] view( T15 ), cache_op=Streaming )
 (function isUnrolled)
