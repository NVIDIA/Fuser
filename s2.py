import torch
from nvfuser import FusionDefinition, DataType

def nvfuser_fusion_id0(fd : FusionDefinition) -> None :
    S0 = fd.define_scalar(None, dtype=DataType.Int)
    S1 = fd.define_scalar(None, dtype=DataType.Int)
    T2 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T3 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T4 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T5 = fd.define_tensor(shape=[1, -1], contiguity=[None, True], dtype=DataType.Float, is_cpu=False, stride_order=[1, 0])
    T6 = fd.define_tensor(shape=[1, -1, 1], contiguity=[None, None, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 0, 1])
    T7 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T8 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, None], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T9 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, None, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T10 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T11 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T12 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T13 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.Float, is_cpu=False, stride_order=[2, 1, 0])
    T14 = fd.define_tensor(shape=[1, -1, -1], contiguity=[None, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T15 = fd.ops.cast(T2, dtype=DataType.Float)
    T16 = fd.ops.cast(T4, dtype=DataType.Float)
    T17 = fd.ops.cast(T3, dtype=DataType.Float)
    T18 = fd.ops.add(T16, T17)
    T19 = fd.ops.add(T18, T15)
    T20 = fd.ops.cast(T9, dtype=DataType.Float)
    T21 = fd.ops.cast(T10, dtype=DataType.Float)
    S22 = fd.define_scalar(1, dtype=DataType.Int)
    S23 = fd.define_scalar(2048, dtype=DataType.Int)
    S24 = fd.define_scalar(1, dtype=DataType.Int)
    V25 = fd.define_vector([S22, S23, S24], dtype=DataType.Int)
    T26 = fd.ops.broadcast_in_dim(T5, shape=V25, broadcast_dims=[0, 1])
    S27 = fd.define_scalar(1, dtype=DataType.Int)
    S28 = fd.define_scalar(2048, dtype=DataType.Int)
    S29 = fd.define_scalar(8192, dtype=DataType.Int)
    V30 = fd.define_vector([S27, S28, S29], dtype=DataType.Int)
    T31 = fd.ops.broadcast_in_dim(T26, shape=V30, broadcast_dims=[0, 1, 2])
    S32 = fd.define_scalar(3.00000, dtype=DataType.Double)
    T33 = fd.ops.pow(T6, S32)
    T34 = fd.ops.sub(T19, T31)
    T35 = fd.ops.sum(T12, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T36 = fd.ops.sum(T13, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    S37 = fd.define_scalar(1, dtype=DataType.Int)
    S38 = fd.define_scalar(2048, dtype=DataType.Int)
    S39 = fd.define_scalar(1, dtype=DataType.Int)
    V40 = fd.define_vector([S37, S38, S39], dtype=DataType.Int)
    T41 = fd.ops.broadcast_in_dim(T35, shape=V40, broadcast_dims=[1])
    S42 = fd.define_scalar(1, dtype=DataType.Int)
    S43 = fd.define_scalar(2048, dtype=DataType.Int)
    S44 = fd.define_scalar(1, dtype=DataType.Int)
    V45 = fd.define_vector([S42, S43, S44], dtype=DataType.Int)
    T46 = fd.ops.broadcast_in_dim(T36, shape=V45, broadcast_dims=[1])
    S47 = fd.define_scalar(-0.500000, dtype=DataType.Double)
    T48 = fd.ops.mul(S47, T41)
    T49 = fd.ops.mul(T48, T33)
    T50 = fd.ops.cast(T14, dtype=DataType.Float)
    T51 = fd.ops.mul(T20, T50)
    T52 = fd.ops.mul(T8, T51)
    T53 = fd.ops.mul(T7, T51)
    T54 = fd.ops.neg(T52)
    T55 = fd.ops.sum(T49, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T56 = fd.ops.sum(T46, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T57 = fd.ops.sum(T53, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T58 = fd.ops.sum(T54, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    S59 = fd.define_scalar(1, dtype=DataType.Int)
    S60 = fd.define_scalar(2048, dtype=DataType.Int)
    V61 = fd.define_vector([S59, S60], dtype=DataType.Int)
    T62 = fd.ops.broadcast_in_dim(T55, shape=V61, broadcast_dims=[1])
    S63 = fd.define_scalar(1, dtype=DataType.Int)
    S64 = fd.define_scalar(2048, dtype=DataType.Int)
    S65 = fd.define_scalar(1, dtype=DataType.Int)
    V66 = fd.define_vector([S63, S64, S65], dtype=DataType.Int)
    T67 = fd.ops.broadcast_in_dim(T62, shape=V66, broadcast_dims=[0, 1])
    S68 = fd.define_scalar(1, dtype=DataType.Int)
    S69 = fd.define_scalar(2048, dtype=DataType.Int)
    S70 = fd.define_scalar(8192, dtype=DataType.Int)
    V71 = fd.define_vector([S68, S69, S70], dtype=DataType.Int)
    T72 = fd.ops.broadcast_in_dim(T67, shape=V71, broadcast_dims=[0, 1, 2])
    S73 = fd.define_scalar(2.00000, dtype=DataType.Double)
    T74 = fd.ops.mul(S73, T72)
    T75 = fd.ops.mul(T74, T34)
    S76 = fd.define_scalar(1, dtype=DataType.Int)
    S77 = fd.define_scalar(2048, dtype=DataType.Int)
    S78 = fd.define_scalar(1, dtype=DataType.Int)
    V79 = fd.define_vector([S76, S77, S78], dtype=DataType.Int)
    T80 = fd.ops.broadcast_in_dim(T57, shape=V79, broadcast_dims=[1])
    S81 = fd.define_scalar(1, dtype=DataType.Int)
    S82 = fd.define_scalar(2048, dtype=DataType.Int)
    S83 = fd.define_scalar(1, dtype=DataType.Int)
    V84 = fd.define_vector([S81, S82, S83], dtype=DataType.Int)
    T85 = fd.ops.broadcast_in_dim(T58, shape=V84, broadcast_dims=[1])
    S86 = fd.define_scalar(-0.500000, dtype=DataType.Double)
    T87 = fd.ops.mul(S86, T80)
    T88 = fd.ops.mul(T87, T33)
    S89 = fd.define_scalar(16.0000, dtype=DataType.Double)
    S90 = fd.ops.reciprocal(S89)
    S91 = fd.ops.cast(S0, dtype=DataType.Double)
    S92 = fd.ops.reciprocal(S91)
    T93 = fd.ops.mul(T75, S92)
    T94 = fd.ops.sum(T88, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T95 = fd.ops.sum(T85, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    S96 = fd.define_scalar(1, dtype=DataType.Int)
    S97 = fd.define_scalar(2048, dtype=DataType.Int)
    V98 = fd.define_vector([S96, S97], dtype=DataType.Int)
    T99 = fd.ops.broadcast_in_dim(T94, shape=V98, broadcast_dims=[1])
    S100 = fd.define_scalar(1, dtype=DataType.Int)
    S101 = fd.define_scalar(2048, dtype=DataType.Int)
    S102 = fd.define_scalar(1, dtype=DataType.Int)
    V103 = fd.define_vector([S100, S101, S102], dtype=DataType.Int)
    T104 = fd.ops.broadcast_in_dim(T99, shape=V103, broadcast_dims=[0, 1])
    S105 = fd.define_scalar(1, dtype=DataType.Int)
    S106 = fd.define_scalar(2048, dtype=DataType.Int)
    S107 = fd.define_scalar(8192, dtype=DataType.Int)
    V108 = fd.define_vector([S105, S106, S107], dtype=DataType.Int)
    T109 = fd.ops.broadcast_in_dim(T104, shape=V108, broadcast_dims=[0, 1, 2])
    S110 = fd.define_scalar(2.00000, dtype=DataType.Double)
    T111 = fd.ops.mul(S110, T109)
    T112 = fd.ops.mul(T111, T34)
    S113 = fd.ops.cast(S1, dtype=DataType.Double)
    S114 = fd.ops.reciprocal(S113)
    T115 = fd.ops.mul(T112, S114)
    S116 = fd.define_scalar(1, dtype=DataType.Int)
    S117 = fd.define_scalar(2048, dtype=DataType.Int)
    V118 = fd.define_vector([S116, S117], dtype=DataType.Int)
    T119 = fd.ops.broadcast_in_dim(T56, shape=V118, broadcast_dims=[1])
    S120 = fd.define_scalar(1, dtype=DataType.Int)
    S121 = fd.define_scalar(2048, dtype=DataType.Int)
    S122 = fd.define_scalar(1, dtype=DataType.Int)
    V123 = fd.define_vector([S120, S121, S122], dtype=DataType.Int)
    T124 = fd.ops.broadcast_in_dim(T119, shape=V123, broadcast_dims=[0, 1])
    S125 = fd.define_scalar(1, dtype=DataType.Int)
    S126 = fd.define_scalar(2048, dtype=DataType.Int)
    S127 = fd.define_scalar(8192, dtype=DataType.Int)
    V128 = fd.define_vector([S125, S126, S127], dtype=DataType.Int)
    T129 = fd.ops.broadcast_in_dim(T124, shape=V128, broadcast_dims=[0, 1, 2])
    S130 = fd.define_scalar(0.000122070, dtype=DataType.Double)
    T131 = fd.ops.mul(S130, T129)
    T132 = fd.ops.add(T131, T93)
    T133 = fd.ops.add(T11, T132)
    T134 = fd.ops.add(T21, T133)
    S135 = fd.define_scalar(1, dtype=DataType.Int)
    S136 = fd.define_scalar(2048, dtype=DataType.Int)
    V137 = fd.define_vector([S135, S136], dtype=DataType.Int)
    T138 = fd.ops.broadcast_in_dim(T95, shape=V137, broadcast_dims=[1])
    S139 = fd.define_scalar(1, dtype=DataType.Int)
    S140 = fd.define_scalar(2048, dtype=DataType.Int)
    S141 = fd.define_scalar(1, dtype=DataType.Int)
    V142 = fd.define_vector([S139, S140, S141], dtype=DataType.Int)
    T143 = fd.ops.broadcast_in_dim(T138, shape=V142, broadcast_dims=[0, 1])
    S144 = fd.define_scalar(1, dtype=DataType.Int)
    S145 = fd.define_scalar(2048, dtype=DataType.Int)
    S146 = fd.define_scalar(8192, dtype=DataType.Int)
    V147 = fd.define_vector([S144, S145, S146], dtype=DataType.Int)
    T148 = fd.ops.broadcast_in_dim(T143, shape=V147, broadcast_dims=[0, 1, 2])
    S149 = fd.define_scalar(0.000122070, dtype=DataType.Double)
    T150 = fd.ops.mul(S149, T148)
    T151 = fd.ops.add(T150, T115)
    T152 = fd.ops.add(T52, T151)
    T153 = fd.ops.add(T134, T152)
    T154 = fd.ops.cast(T153, dtype=DataType.BFloat16)
    fd.add_output(T154)

with FusionDefinition() as fd:
    nvfuser_fusion_id0(fd)

inputs = [
    8192,
    8192,
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((2048,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048), (2048, 1)),
    torch.randn((2048,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048, 1), (2048, 1, 2048)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((2048,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048, 8192), (2048, 1, 0)),
    torch.randn((8192,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 2048, 8192), (8192, 0, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.float32, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
    torch.randn((16777216,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 2048, 8192), (16777216, 8192, 1)),
]
fd.execute(inputs)
