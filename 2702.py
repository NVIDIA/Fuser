import torch
from nvfuser import FusionDefinition, DataType

def nvfuser_fusion_id1(fd : FusionDefinition) -> None :
    T0 = fd.define_tensor(shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0])
    T1 = fd.define_tensor(shape=[-1, -1], contiguity=[True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[1, 0])
    T2 = fd.define_tensor(shape=[1, -1, -1, -1], contiguity=[None, True, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[3, 2, 1, 0])
    T3 = fd.define_tensor(shape=[1, -1, -1, -1], contiguity=[None, True, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[3, 2, 1, 0])
    T4 = fd.define_tensor(shape=[1, -1, -1, -1], contiguity=[None, True, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[3, 2, 1, 0])
    S5 = fd.define_scalar(1, dtype=DataType.Int)
    S6 = fd.define_scalar(32, dtype=DataType.Int)
    S7 = fd.define_scalar(8192, dtype=DataType.Int)
    S8 = fd.define_scalar(128, dtype=DataType.Int)
    V9 = fd.define_vector([S5, S6, S7, S8], dtype=DataType.Int)
    T10 = fd.ops.broadcast_in_dim(T0, shape=V9, broadcast_dims=[2, 3])
    T11 = fd.ops.cast(T10, dtype=DataType.Float)
    S12 = fd.define_scalar(1, dtype=DataType.Int)
    S13 = fd.define_scalar(32, dtype=DataType.Int)
    S14 = fd.define_scalar(8192, dtype=DataType.Int)
    S15 = fd.define_scalar(128, dtype=DataType.Int)
    V16 = fd.define_vector([S12, S13, S14, S15], dtype=DataType.Int)
    T17 = fd.ops.broadcast_in_dim(T1, shape=V16, broadcast_dims=[2, 3])
    T18 = fd.ops.cast(T17, dtype=DataType.Float)
    T19 = fd.ops.slice(T3, start_indices=[0, 0, 0, 0], end_indices=[1, 32, 8192, 128], strides=[1, 1, 1, 1])
    S20 = fd.define_scalar(0, dtype=DataType.Int)
    S21 = fd.define_scalar(1, dtype=DataType.Int)
    S22 = fd.define_scalar(32, dtype=DataType.Int)
    S23 = fd.define_scalar(8192, dtype=DataType.Int)
    S24 = fd.define_scalar(0, dtype=DataType.Int)
    V25 = fd.define_vector([S21, S22, S23, S24], dtype=DataType.Int)
    T26 = fd.ops.full(shape=V25, fill_value=S20, dtype=DataType.BFloat16)
    S27 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T28 = fd.ops.pad(T26, [0, 128, 0, 0, 0, 0, 0, 0], S27)
    T29 = fd.ops.slice(T2, start_indices=[0, 0, 0, 0], end_indices=[1, 32, 8192, 128], strides=[1, 1, 1, 1])
    T30 = fd.ops.cast(T19, dtype=DataType.Float)
    T31 = fd.ops.mul(T18, T30)
    T32 = fd.ops.cast(T31, dtype=DataType.BFloat16)
    T33 = fd.ops.mul(T11, T30)
    T34 = fd.ops.cast(T28, dtype=DataType.Float)
    T35 = fd.ops.add(T34, T33)
    T36 = fd.ops.slice(T32, start_indices=[0, 0, 0, 0], end_indices=[1, 32, 8192, 64], strides=[1, 1, 1, 1])
    T37 = fd.ops.slice(T32, start_indices=[0, 0, 0, 64], end_indices=[1, 32, 8192, 128], strides=[1, 1, 1, 1])
    T38 = fd.ops.cast(T36, dtype=DataType.Float)
    T39 = fd.ops.neg(T38)
    T40 = fd.ops.cast(T39, dtype=DataType.BFloat16)
    S41 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T42 = fd.ops.pad(T40, [64, 0, 0, 0, 0, 0, 0, 0], S41)
    T43 = fd.ops.cast(T42, dtype=DataType.Float)
    T44 = fd.ops.add(T35, T43)
    S45 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T46 = fd.ops.pad(T37, [0, 64, 0, 0, 0, 0, 0, 0], S45)
    T47 = fd.ops.cast(T46, dtype=DataType.Float)
    T48 = fd.ops.add(T44, T47)
    T49 = fd.ops.cast(T48, dtype=DataType.BFloat16)
    T50 = fd.ops.cast(T29, dtype=DataType.Float)
    T51 = fd.ops.mul(T18, T50)
    T52 = fd.ops.cast(T51, dtype=DataType.BFloat16)
    T53 = fd.ops.mul(T11, T50)
    T54 = fd.ops.add(T34, T53)
    T55 = fd.ops.slice(T52, start_indices=[0, 0, 0, 0], end_indices=[1, 32, 8192, 64], strides=[1, 1, 1, 1])
    T56 = fd.ops.slice(T52, start_indices=[0, 0, 0, 64], end_indices=[1, 32, 8192, 128], strides=[1, 1, 1, 1])
    T57 = fd.ops.cast(T55, dtype=DataType.Float)
    T58 = fd.ops.neg(T57)
    T59 = fd.ops.cast(T58, dtype=DataType.BFloat16)
    S60 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T61 = fd.ops.pad(T59, [64, 0, 0, 0, 0, 0, 0, 0], S60)
    T62 = fd.ops.cast(T61, dtype=DataType.Float)
    T63 = fd.ops.add(T54, T62)
    S64 = fd.define_scalar(0.00000, dtype=DataType.Double)
    T65 = fd.ops.pad(T56, [0, 64, 0, 0, 0, 0, 0, 0], S64)
    T66 = fd.ops.cast(T65, dtype=DataType.Float)
    T67 = fd.ops.add(T63, T66)
    T68 = fd.ops.cast(T67, dtype=DataType.BFloat16)
    S69 = fd.define_scalar(1, dtype=DataType.Int)
    S70 = fd.define_scalar(8, dtype=DataType.Int)
    S71 = fd.define_scalar(4, dtype=DataType.Int)
    S72 = fd.define_scalar(8192, dtype=DataType.Int)
    S73 = fd.define_scalar(128, dtype=DataType.Int)
    V74 = fd.define_vector([S69, S70, S71, S72, S73], dtype=DataType.Int)
    T75 = fd.ops.reshape(T4, new_shape=V74)
    S76 = fd.define_scalar(1, dtype=DataType.Int)
    S77 = fd.define_scalar(8, dtype=DataType.Int)
    S78 = fd.define_scalar(4, dtype=DataType.Int)
    S79 = fd.define_scalar(8192, dtype=DataType.Int)
    S80 = fd.define_scalar(128, dtype=DataType.Int)
    V81 = fd.define_vector([S76, S77, S78, S79, S80], dtype=DataType.Int)
    T82 = fd.ops.reshape(T49, new_shape=V81)
    S83 = fd.define_scalar(1, dtype=DataType.Int)
    S84 = fd.define_scalar(8, dtype=DataType.Int)
    S85 = fd.define_scalar(4, dtype=DataType.Int)
    S86 = fd.define_scalar(8192, dtype=DataType.Int)
    S87 = fd.define_scalar(128, dtype=DataType.Int)
    V88 = fd.define_vector([S83, S84, S85, S86, S87], dtype=DataType.Int)
    T89 = fd.ops.reshape(T68, new_shape=V88)
    T90 = fd.ops.cast(T75, dtype=DataType.Float)
    T91 = fd.ops.sum(T90, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T92 = fd.ops.cast(T91, dtype=DataType.BFloat16)
    S93 = fd.define_scalar(1, dtype=DataType.Int)
    S94 = fd.define_scalar(8, dtype=DataType.Int)
    S95 = fd.define_scalar(1, dtype=DataType.Int)
    S96 = fd.define_scalar(8192, dtype=DataType.Int)
    S97 = fd.define_scalar(128, dtype=DataType.Int)
    V98 = fd.define_vector([S93, S94, S95, S96, S97], dtype=DataType.Int)
    T99 = fd.ops.broadcast_in_dim(T92, shape=V98, broadcast_dims=[1, 3, 4])
    T100 = fd.ops.cast(T82, dtype=DataType.Float)
    T101 = fd.ops.sum(T100, dims=[0, 2], keepdim=False, dtype=DataType.Null)
    T102 = fd.ops.cast(T101, dtype=DataType.BFloat16)
    S103 = fd.define_scalar(1, dtype=DataType.Int)
    S104 = fd.define_scalar(8, dtype=DataType.Int)
    S105 = fd.define_scalar(1, dtype=DataType.Int)
    S106 = fd.define_scalar(8192, dtype=DataType.Int)
    S107 = fd.define_scalar(128, dtype=DataType.Int)
    V108 = fd.define_vector([S103, S104, S105, S106, S107], dtype=DataType.Int)
    T109 = fd.ops.broadcast_in_dim(T102, shape=V108, broadcast_dims=[1, 3, 4])
    T110 = fd.ops.cat([T89, T109, T99], dim=2)
    T111 = fd.ops.permute(T110, dims=[0, 3, 1, 2, 4])
    S112 = fd.define_scalar(1, dtype=DataType.Int)
    S113 = fd.define_scalar(8192, dtype=DataType.Int)
    S114 = fd.define_scalar(6144, dtype=DataType.Int)
    V115 = fd.define_vector([S112, S113, S114], dtype=DataType.Int)
    T116 = fd.ops.reshape(T111, new_shape=V115)
    fd.add_output(T116)

with FusionDefinition() as fd:
    nvfuser_fusion_id1(fd)

inputs = [
    torch.randn((1048576,), dtype=torch.bfloat16, device='cuda:0').as_strided((8192, 128), (128, 1)),
    torch.randn((1048576,), dtype=torch.bfloat16, device='cuda:0').as_strided((8192, 128), (128, 1)),
    torch.randn((33554432,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 32, 8192, 128), (33554432, 1048576, 128, 1)),
    torch.randn((33554432,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 32, 8192, 128), (33554432, 1048576, 128, 1)),
    torch.randn((33554432,), dtype=torch.bfloat16, device='cuda:0').as_strided((1, 32, 8192, 128), (33554432, 1048576, 128, 1)),
]
fd.execute(inputs)

