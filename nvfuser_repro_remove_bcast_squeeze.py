import torch
from nvfuser import FusionDefinition, DataType

def nvfuser_fusion_id1(fd : FusionDefinition) -> None :
    T0 = fd.define_tensor(shape=[-1, -1, -1], contiguity=[None, None, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T1 = fd.define_tensor(shape=[-1, -1, -1], contiguity=[None, None, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T2 = fd.define_tensor(shape=[-1, 1, -1], contiguity=[True, None, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T3 = fd.define_tensor(shape=[-1, -1, -1], contiguity=[True, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T4 = fd.define_tensor(shape=[-1, -1], contiguity=[True, True], dtype=DataType.Float, is_cpu=False, stride_order=[1, 0])
    T5 = fd.define_tensor(shape=[-1, -1], contiguity=[True, True], dtype=DataType.Float, is_cpu=False, stride_order=[1, 0])
    T6 = fd.define_tensor(shape=[-1, -1, -1], contiguity=[True, True, True], dtype=DataType.BFloat16, is_cpu=False, stride_order=[2, 1, 0])
    T7 = fd.ops.cast(T6, dtype=DataType.Float)
    S8 = fd.define_scalar(56, dtype=DataType.Int)
    S9 = fd.define_scalar(1024, dtype=DataType.Int)
    S10 = fd.define_scalar(1, dtype=DataType.Int)
    V11 = fd.define_vector([S8, S9, S10], dtype=DataType.Int)
    T12 = fd.ops.broadcast_in_dim(T4, shape=V11, broadcast_dims=[0, 1])
    S13 = fd.define_scalar(56, dtype=DataType.Int)
    S14 = fd.define_scalar(1024, dtype=DataType.Int)
    S15 = fd.define_scalar(1024, dtype=DataType.Int)
    V16 = fd.define_vector([S13, S14, S15], dtype=DataType.Int)
    T17 = fd.ops.broadcast_in_dim(T12, shape=V16, broadcast_dims=[0, 1, 2])
    T18 = fd.ops.sub(T7, T17)
    S19 = fd.define_scalar(56, dtype=DataType.Int)
    S20 = fd.define_scalar(1024, dtype=DataType.Int)
    S21 = fd.define_scalar(1024, dtype=DataType.Int)
    V22 = fd.define_vector([S19, S20, S21], dtype=DataType.Int)
    T23 = fd.ops.broadcast_in_dim(T5, shape=V22, broadcast_dims=[0, 1])
    T24 = fd.ops.mul(T18, T23)
    T25 = fd.ops.cast(T0, dtype=DataType.Float)
    T26 = fd.ops.mul(T24, T25)
    T27 = fd.ops.cast(T1, dtype=DataType.Float)
    T28 = fd.ops.add(T26, T27)
    T29 = fd.ops.cast(T2, dtype=DataType.Float)
    S30 = fd.define_scalar(1.00000, dtype=DataType.Double)
    T31 = fd.ops.add(S30, T29)
    T32 = fd.ops.cast(T31, dtype=DataType.BFloat16)
    S33 = fd.define_scalar(56, dtype=DataType.Int)
    S34 = fd.define_scalar(1024, dtype=DataType.Int)
    S35 = fd.define_scalar(1024, dtype=DataType.Int)
    V36 = fd.define_vector([S33, S34, S35], dtype=DataType.Int)
    T37 = fd.ops.broadcast_in_dim(T32, shape=V36, broadcast_dims=[0, 1, 2])
    T38 = fd.ops.cast(T37, dtype=DataType.Float)
    T39 = fd.ops.cast(T3, dtype=DataType.Float)
    T40 = fd.ops.sum(T39, dims=[1], keepdim=False, dtype=DataType.Null)
    # T41 = fd.ops.cast(T40, dtype=DataType.BFloat16)
    # S42 = fd.define_scalar(56, dtype=DataType.Int)
    # S43 = fd.define_scalar(1, dtype=DataType.Int)
    # S44 = fd.define_scalar(1024, dtype=DataType.Int)
    # V45 = fd.define_vector([S42, S43, S44], dtype=DataType.Int)
    # T46 = fd.ops.broadcast_in_dim(T41, shape=V45, broadcast_dims=[0, 2])
    # T47 = fd.ops.cast(T46, dtype=DataType.Float)
    T48 = fd.ops.set(T40) #fd.ops.sum(T47, dims=[1], keepdim=False, dtype=DataType.Null)
    T49 = fd.ops.cast(T48, dtype=DataType.BFloat16)
    T50 = fd.ops.mul(T38, T39)
    T51 = fd.ops.mul(T28, T39)
    T52 = fd.ops.sum(T51, dims=[1], keepdim=False, dtype=DataType.Null)
    # T53 = fd.ops.cast(T52, dtype=DataType.BFloat16)
    # S54 = fd.define_scalar(56, dtype=DataType.Int)
    # S55 = fd.define_scalar(1, dtype=DataType.Int)
    # S56 = fd.define_scalar(1024, dtype=DataType.Int)
    # V57 = fd.define_vector([S54, S55, S56], dtype=DataType.Int)
    # T58 = fd.ops.broadcast_in_dim(T53, shape=V57, broadcast_dims=[0, 2])
    # T59 = fd.ops.cast(T58, dtype=DataType.Float)
    T60 = fd.ops.set(T52) # fd.ops.sum(T59, dims=[1], keepdim=False, dtype=DataType.Null)
    T61 = fd.ops.cast(T60, dtype=DataType.BFloat16)
    T62 = fd.ops.sum(T50, dims=[0, 1], keepdim=False, dtype=DataType.Null)
    T63 = fd.ops.cast(T62, dtype=DataType.BFloat16)
    T64 = fd.ops.mul(T25, T50)
    T65 = fd.ops.mul(T24, T50)
    T66 = fd.ops.sum(T65, dims=[0, 1], keepdim=False, dtype=DataType.Null)
    T67 = fd.ops.cast(T66, dtype=DataType.BFloat16)
    T68 = fd.ops.mul(T23, T64)
    T69 = fd.ops.mul(T18, T64)
    T70 = fd.ops.sum(T69, dims=[2], keepdim=False, dtype=DataType.Null)
    # S71 = fd.define_scalar(56, dtype=DataType.Int)
    # S72 = fd.define_scalar(1024, dtype=DataType.Int)
    # S73 = fd.define_scalar(1, dtype=DataType.Int)
    # V74 = fd.define_vector([S71, S72, S73], dtype=DataType.Int)
    # T75 = fd.ops.broadcast_in_dim(T70, shape=V74, broadcast_dims=[0, 1])
    T76 = fd.ops.neg(T68)
    T77 = fd.ops.sum(T76, dims=[2], keepdim=False, dtype=DataType.Null)
    # S78 = fd.define_scalar(56, dtype=DataType.Int)
    # S79 = fd.define_scalar(1024, dtype=DataType.Int)
    # S80 = fd.define_scalar(1, dtype=DataType.Int)
    # V81 = fd.define_vector([S78, S79, S80], dtype=DataType.Int)
    # T82 = fd.ops.broadcast_in_dim(T77, shape=V81, broadcast_dims=[0, 1])
    S83 = fd.define_scalar(-0.500000, dtype=DataType.Double)
    T84 = fd.ops.mul(S83, T70)
    S85 = fd.define_scalar(3.00000, dtype=DataType.Double)
    T86 = fd.ops.pow(T5, S85)
    T87 = fd.ops.mul(T84, T86)
    T88 = fd.ops.set(T77) #fd.ops.sum(T82, dims=[2], keepdim=False, dtype=DataType.Null)
    T89 = fd.ops.set(T87) #fd.ops.sum(T87, dims=[2], keepdim=False, dtype=DataType.Null)
    S90 = fd.define_scalar(56, dtype=DataType.Int)
    S91 = fd.define_scalar(1024, dtype=DataType.Int)
    S92 = fd.define_scalar(1, dtype=DataType.Int)
    V93 = fd.define_vector([S90, S91, S92], dtype=DataType.Int)
    T94 = fd.ops.broadcast_in_dim(T88, shape=V93, broadcast_dims=[0, 1])
    S95 = fd.define_scalar(56, dtype=DataType.Int)
    S96 = fd.define_scalar(1024, dtype=DataType.Int)
    S97 = fd.define_scalar(1024, dtype=DataType.Int)
    V98 = fd.define_vector([S95, S96, S97], dtype=DataType.Int)
    T99 = fd.ops.broadcast_in_dim(T94, shape=V98, broadcast_dims=[0, 1, 2])
    S100 = fd.define_scalar(0.000976562, dtype=DataType.Double)
    T101 = fd.ops.mul(S100, T99)
    S102 = fd.define_scalar(56, dtype=DataType.Int)
    S103 = fd.define_scalar(1024, dtype=DataType.Int)
    S104 = fd.define_scalar(1, dtype=DataType.Int)
    V105 = fd.define_vector([S102, S103, S104], dtype=DataType.Int)
    T106 = fd.ops.broadcast_in_dim(T89, shape=V105, broadcast_dims=[0, 1])
    S107 = fd.define_scalar(56, dtype=DataType.Int)
    S108 = fd.define_scalar(1024, dtype=DataType.Int)
    S109 = fd.define_scalar(1024, dtype=DataType.Int)
    V110 = fd.define_vector([S107, S108, S109], dtype=DataType.Int)
    T111 = fd.ops.broadcast_in_dim(T106, shape=V110, broadcast_dims=[0, 1, 2])
    S112 = fd.define_scalar(56, dtype=DataType.Int)
    S113 = fd.define_scalar(1024, dtype=DataType.Int)
    S114 = fd.define_scalar(1, dtype=DataType.Int)
    V115 = fd.define_vector([S112, S113, S114], dtype=DataType.Int)
    T116 = fd.ops.broadcast_in_dim(T4, shape=V115, broadcast_dims=[0, 1])
    S117 = fd.define_scalar(56, dtype=DataType.Int)
    S118 = fd.define_scalar(1024, dtype=DataType.Int)
    S119 = fd.define_scalar(1024, dtype=DataType.Int)
    V120 = fd.define_vector([S117, S118, S119], dtype=DataType.Int)
    T121 = fd.ops.broadcast_in_dim(T116, shape=V120, broadcast_dims=[0, 1, 2])
    S122 = fd.define_scalar(2.00000, dtype=DataType.Double)
    T123 = fd.ops.mul(S122, T111)
    T124 = fd.ops.sub(T7, T121)
    T125 = fd.ops.mul(T123, T124)
    S126 = fd.define_scalar(1024.00, dtype=DataType.Double)
    S127 = fd.ops.reciprocal(S126)
    T128 = fd.ops.mul(T125, S127)
    T129 = fd.ops.add(T101, T128)
    T130 = fd.ops.add(T68, T129)
    T131 = fd.ops.cast(T130, dtype=DataType.BFloat16)
    fd.add_output(T49)
    fd.add_output(T61)
    fd.add_output(T63)
    fd.add_output(T67)
    fd.add_output(T131)

with FusionDefinition() as fd:
    nvfuser_fusion_id1(fd)

inputs = [
    torch.randn((1024,), dtype=torch.bfloat16, device='cuda:0').as_strided((56, 1024, 1024), (0, 0, 1)),
    torch.randn((1024,), dtype=torch.bfloat16, device='cuda:0').as_strided((56, 1024, 1024), (0, 0, 1)),
    torch.randn((57344,), dtype=torch.bfloat16, device='cuda:0').as_strided((56, 1, 1024), (1024, 1024, 1)),
    torch.randn((58720256,), dtype=torch.bfloat16, device='cuda:0').as_strided((56, 1024, 1024), (1048576, 1024, 1)),
    torch.randn((57344,), dtype=torch.float32, device='cuda:0').as_strided((56, 1024), (1024, 1)),
    torch.randn((57344,), dtype=torch.float32, device='cuda:0').as_strided((56, 1024), (1024, 1)),
    torch.randn((58720256,), dtype=torch.bfloat16, device='cuda:0').as_strided((56, 1024, 1024), (1048576, 1024, 1)),
]
fd.execute(inputs)
